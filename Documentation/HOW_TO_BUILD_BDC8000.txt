[ Build instructions ]

GPL/LGPL software for the Samsung BD-C8000 BD Player.
This software distribution consists of GPL and LGPL components used in the Samsung BD-C8000 BD Player:

===============================================================================================================================================================================================
Samsung Electronics, Co. Ltd. (¡°Samsung¡±) is pleased to make available to you the various source codes ("Source Codes") for download from this website (¡°Download Service¡±) at no charge. 
By using the Source Code and/or the Download Service, you expressly assume all risk and liability associated with and/or caused by the same and complying with all applicable user agreements 
that accompany each Source Code. To the extent any of the Source Codes are licensed under public licenses such as the GNU General Public License and/or GNU Lesser General Public License, 
such licenses can be found in each of the files containing the Source Codes.
 
SAMSUNG PROVIDES THE SOURCE CODES AND THIS DOWNLOADING SERVICE "AS IS" WITHOUT REPRESENTATION OR WARRANTY OF ANY KIND AND ALL SUCH WARRANTIES, EXPRESS OR IMPLIED, ARE HEREBY DISCLAIMED, 
INCLUDING, WITHOUT LIMITATION, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE ACCURACY, COMPLETENESS, CURRENCY, AVAILABILITY, TITLE, OR NON-INFRINGEMENT. 
SAMSUNG WILL NOT BE LIABLE FOR ANY DAMAGES OF ANY KIND ARISING FROM THE USE OF THE SOURCE CODE AND THIS DOWNLOADING SERVICE, INCLUDING, BUT NOT LIMITED TO DIRECT, INDIRECT, INCIDENTAL, PUNITIVE, AND CONSEQUENTIAL DAMAGES. YOU ACKNOWLEDGE THAT SAMSUNG IS NOT OBLIGATED TO PROVIDE AND DOES NOT PROVIDE ANY SUPPORT OR ASSISTANCE WITH RESPECT TO THE SOURCE CODES OR THE DOWNLOAD SERVICE.
 
This downloading service shall not affect nor extend any warranty or disclaimer which Samsung makes in each of Samsung's products in which the Source Code (or object/executable code based thereon) is incorporated.
===============================================================================================================================================================================================

System requirement (Strongly recommended)
  * OS: RHEL 5.0 or CentOS 5.0/4.0
  
  * kernel: Linux version 2.6.24_SELP.4.3.x-Cortex-A8, GPL v2  
  * gcc: gcc 4.2.0, GPL v2
  * busybox: BusyBox 1.6.0, GPL v2
  * binutils: binutils 2.17.50, GPL v2 / LGPL v2 or later
  * glibc: glibc-2.5.90, LGPL v2.1
  * uBoot: uboot, GPL V2
  * libgphoto2: libgphoto2 2.3.1, LGPL v2.1
  * libusb: libusb 0.1.12, LGPL v2 or later  
  * wireless_tools: wireless_tools.29, GPL v2
  * SDL : SDL-1.2.11, LGPL v2.1
  * Smpeg : smpeg-0.4.5, LGPL v2.1
  * libmms : mms, LGPL v2.1
  * ffmpeg : ffmpeg, LGPL v2.1
  * libthai : libthai-0.1.6, LGPL v2.1
  * libiconv : libiconv_1_9_1.tar LGPL v2.1

The BD-C8000 BD Player has an ARM processor; 
the software is normally cross-compiled for that processor.  
All of those softwares have to be built with the MontaVista
ARM toolchain gcc version 4.2.0 (SELP-ARM 4.3.1.30 4.2.0-16.0.58.custom.custom 2009-11-17(13:58))

* Building kernel:
    * Unpack the kernel tarball and cd into it.
    * Run "make Image".

* Building busybox
    * Unpack the busybox tarball and cd into it.
    * "make ARCH=arm CROSS_COMPILE=arm_v7_vfp_le-". 

* Building binutils:
    * Unpack the binutils tarball and cd into it.
    * Run "sh build-crossbinutils-arm_v7_vfp_le.sh absolute-dir-to-install"(ex:"sh build-crossbinutils-arm_v7_vfp_le.sh /home/yourid/binutilsbuild.1025")

* Building glibc:
    * Unpack the glibc tarball and cd into it.
    * Run "sh build-glibc-arm_v7_vfp_le.sh absolute-dir-to-install"(ex:"sh build-glibc-arm_v7_vfp_le.sh /home/yourid/glibcbuild.1025")

* Building ffmpeg
    * Unpack the ffmpeg tarball and cd into it.(tar -zxvf ffmpeg.tgz)
    * cd SVN-r19089
    * Run "make".

* Building libusb.so
    * Unpack the LGPL_LIBUSB.tar.gz and you will find libusb.tar.gz in it.
    * Unpack the libusb.tar.gz and cd into it.
    * Run "make -f Makefile.

* Building libptp.so
    * Unpack the LGPL_LIBGPHOTO2.tar.gz and you will find libptp.tar.gz in it.
    * Unpack the libptp.tar.gz and cd into it.
    * Run "make -f Makefile.

* Building uboot.bin:
    * Unpack the u-boot tarball and cd into it.
    * Run "sh darth.sh"

* Building wireless tools
    * Unpack the wireless tools(if it is compressed) tarball and cd into it.(tar -zxvf wireless_tools.29.tar.gz)
    * cd wireless_tools.29
    * Run "make". 

* Building libthai
    * Unpack the libthai tarball and cd into it.(tar -zxvf libthai_0.1.6.tgz)
    * cd libthai_0.1.6
    * Run "make".

* Building SDL
    * Unpack the rungetty tarball and cd into it.(tar -zxvf LGPL_SDL.tar.gz)
    * cd SDL-1.2.11
    * Run "make-f Makefile.SDL". 
    * if required, modify "CROSS_COMPILE" of Makefile.SDL.

* Building smpeg
    * Unpack the rungetty tarball and cd into it.(tar -zxvf LGPL_smpeg.tar.gz)
    * cd smpeg-0.4.5
    * Run "make-f Makefile.smpeg". 
    * if required, modify "CROSS_COMPILE" of Makefile.smpeg.


- End of File -
